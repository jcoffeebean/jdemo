<?xml version="1.0" encoding="UTF-8"?> 
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"  
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd"> 

<mapper namespace="study.mapper.QQMapper">

  	<resultMap  id="qqResultMap" type="study.entity.QQ">
	    <result property="sfzh" column="SFZH"/> 
	    <result property="xm" column="XM"/> 
	    <result property="qq" column="QQ"/> 
  	</resultMap> 
  	
 
  	 <!-- 根据qq号查询人员信息-->
  	<select id="queryByQQ" resultMap="qqResultMap"> 
		select xm,sfzh,qq from QQSMYH 
		<include refid="where"/>
  	</select> 
  	<select id="queryByQQ_count" resultType="Integer"> 
		select count(1) from QQSMYH 
		<include refid="where"/>
  	</select> 
  	
	<sql id="where">
		<where>	      				
	       <if test="@util.Ognl@isNotEmpty(sfzh)">
				AND sfzh = #{sfzh}
			</if>
	       <if test="@util.Ognl@isNotEmpty(qq)">
				AND qq = #{qq}
			</if>
	       <if test="@util.Ognl@isNotEmpty(xm)">
				AND xm like '%${xm}%'
			</if>
		</where>
	</sql>  	  	
  	<!-- 参数最好都封装在Map或者bean里面 -->
  	<select id="getQQBySfzh" parameterType="java.util.Map"  resultMap="qqResultMap">
  		select * from QQSMYH 
  		<where>
  			<if test="@util.Ognl@isNotEmpty(sfzh)">
  				and sfzh=#{sfzh}
  			</if>
  			<if test="@util.Ognl@isEmpty(sfzh)">
  				<![CDATA[
  				and rownum<2
  				]]>
  			</if>
  		</where>
  	</select>
  	
  	<!-- #和$的区别：#直接与参数绑定，而EL表达式需要用参数的getter方法去取值，例如参数为xm则if测试语句以及${xm}表达式中的xm的值均是通过getXm()去获取,
  		所以当有EL表达式存在时需要Map或者bean封装参数并提供参数的getter方法 -->
  	<select id="getQQByXm" parameterType="String" resultMap="qqResultMap">
  		select * from QQSMYH 
  		<where>
  			<if test="xm!=null">
  				and xm like '%${xm}%'
  			</if>
  		</where>
  	</select>
</mapper>